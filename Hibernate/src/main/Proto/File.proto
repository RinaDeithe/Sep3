syntax ="proto3";
package GRPC.proto;

// SERVICES

service ItemService {
  rpc Create(ItemCreation) returns (ItemProto);
  rpc Read(ItemSearchRequest) returns (ItemProto);
  rpc ReadAll(emptyParams) returns (ItemListProto);
  rpc Update(ItemProto) returns (ItemProto);
  rpc Delete(ItemSearchRequest) returns (ItemProto);
}

service ItemTypeService {
  rpc Create(ItemTypeCreationRequest) returns (ItemTypeProto);
  rpc Read(ItemTypeSearchRequest) returns (ItemTypeProto);
  rpc ReadAll(emptyParams) returns (ItemTypeListProto);
  rpc Update(ItemProto) returns (ItemProto);
  rpc Delete(ItemTypeSearchRequest) returns (ItemTypeProto);
}

service ShelfService {
  rpc Create(ShelfCreationRequest) returns (ShelfProto);
  rpc Read(ShelfSearchRequest) returns (ShelfProto);
  rpc ReadAll(emptyParams) returns (ShelvesListProto);
  rpc Update(ItemProto) returns (ItemProto);
  rpc Delete(ShelfSearchRequest) returns (ShelfProto);
}

service UserService {
  rpc Create(CreateUserRequest) returns (UserProto);
  rpc Read(UserSearchRequest) returns (UserProto);
  rpc ReadAll(emptyParams) returns (UserListProto);
  rpc Update(ItemProto) returns (ItemProto);
  rpc Delete(UserSearchRequest) returns (UserProto);
}

// SHELF MESSAGES

message ShelfProto {
  string RowNo = 1;
  string ShelfNo = 2;
  double ShelfDimX = 3;
  double ShelfDimY = 4;
  double ShelfDimZ = 5;
  ItemListProto ItemsOnShelf = 6;
}

message ShelfCreationRequest {
  string RowNo = 1;
  string ShelfNo = 2;
  double ShelfDimX = 3;
  double ShelfDimY = 4;
  double ShelfDimZ = 5;
}

message ShelfSearchRequest{
  int32 id = 1;
}

message ShelvesListProto{
  repeated ShelfProto proto =1;
}

// ITEMTYPE MESSAGES

message ItemTypeCreationRequest{
  int32 id = 1;
  double ItemDimX = 2;
  double ItemDimY = 3;
  double ItemDimZ = 4;
}

message ItemTypeSearchRequest{
  int32 id = 1;
}

message ItemTypeProto{
  int32 id = 1;
  double DimX = 2;
  double DimY = 3;
  double DimZ = 4;
}

message ItemTypeListProto {
  repeated ItemTypeProto list = 1;
}

// ITEM MESSAGES

message ItemCreation{
  int32 ItemTypeID = 1;
  int32 ShelfID = 2;
  int32 OwnerID = 3;
}

message ItemSearchRequest{
  int32 id = 1;
}

message ItemProto{
  ItemTypeProto type = 1;
  int32 UniqueID = 2;
  UserProto owner = 3;
  ShelfProto shelf = 4;
}

message ItemListProto {
  repeated ItemProto list = 1;
}

// USER MESSAGES

message CreateUserRequest{
  int32 id_user = 1;
  string role = 2;
}

message UserProto{
  int32 Id = 1;
  string role = 2;
}

message UserSearchRequest {
  int32 Id = 1;
  string role = 2;
}

message UserListProto {
  repeated UserProto list = 1;
}

// MISC

message getAllRequest{

}

message emptyParams {}