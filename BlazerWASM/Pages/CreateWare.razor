@page "/CreateWare"
@using HttpClients.ClientInterfaces
@using global::Shared.DTOs


@inject IWareService Service;

<h3>CreateWare</h3>

<div class="card">
    <div>
        <div>
        <label>Kundenummer</label>
        <input type="text" @bind="kundeNummer"/>
        @if (!string.IsNullOrEmpty(resultMsg))
        {
            <label style="color: @color">@resultMsg</label>
        }
        </div>
        <div>
        <label>Varenummer</label>
        <input type="text" @bind="vareNummer"/>
        @if (!string.IsNullOrEmpty(resultMsg))
        {
            <label style="color: @color">@resultMsg</label>
        }
        </div>
    <div>
        <label>Vare antal</label>
        <input type="text" @bind="vareAntal"/>
        @if (!string.IsNullOrEmpty(resultMsg))
        {
            <label style="color: @color">@resultMsg</label>
        }
        </div>

        <button @onclick="createWare" class="acceptbtn">Create</button>
    </div>
</div>


@code {


    private string kundeNummer;
    private string vareNummer;
    private string vareAntal;
    private string resultMsg;
    private string color;

    private async Task createWare()
    {
        try
        {
            await Service.Create(new WareCreationDto(kundeNummer, vareNummer, vareAntal));
            kundeNummer = "";
            vareNummer = "";
            vareAntal = "";
            resultMsg = "";
            color = "green";
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            resultMsg = e.Message;
            color = "red";
        }
    }


}