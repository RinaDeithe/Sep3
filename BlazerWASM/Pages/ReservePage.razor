@page "/ReservePage"
@using BlazerWASM.StateContainer
@using global::Shared.DTOs
@using global::Shared.DTOs.Item
@using global::Shared.DTOs.ItemType
@using HttpClients.ClientInterfaces
@using HttpClients.Implementations
@inject ReserveItemState state;
@inject NavigationManager NavigationManager;
@inject IItemTypeService typeService;
@inject IShelfService shelfServic;
@inject IItemService itemService;
@inject ItemHttpClient itemHttpClient;

<h3 class="text-center">ReservePage</h3>

<div class="container-fluid">
    <div class="row text-center">

        <div class="col-6">
            <form action="/action_page.php">
                <label for="Varenummer">Varnummer: </label> <br/>
                <input type="varenummer" id="varenummer" name="varenummer"@bind="state.typeId" placeholder="@state.typeId"><br><br>
                <label for="antal">Antal </label> <br/>
                <input type="antal" id="antal" name="antal" minlength="8" @bind="state.amount" placeholder="@state.amount"><br><br>
                <button type="button" @onclick="Reserve">Godkend</button>
                <button type="button" @onclick="Confirmation">Godkend</button>
            </form>
        </div>


        <div class="col-6">
            <br>
            <textarea rows="14" cols="80"></textarea>
        </div>
    </div>

</div>


@code {
    private string resultmsg;
    private bool buttonClicked;

    private void Reserve()
    {
        if (state.typeId == null)
        {
            resultmsg = "Please input an id";
        }
        
        if (!typeService.CheckType(new ItemTypeSearchDto(state.typeId)))
        {
            buttonClicked = false;

            while (buttonClicked.Equals(false))
            {
                Thread.Sleep(500);
            }
            
            NavigationManager.NavigateTo("/CreateItemType");
        }

        if (!shelfServic.HasRoom(new ItemRegisterReqiestDto(state.typeId, new List<AmountOnSpaceDto>())))
        {
            resultmsg = "No room for this amount";
            return;
        }

        itemService.ReserveItem(new ItemCreationDto(state.typeId, int.Parse(state.amount),1, true, null));
    }
    
    
    private void Confirmation()
    {
        buttonClicked = true;
    }

}